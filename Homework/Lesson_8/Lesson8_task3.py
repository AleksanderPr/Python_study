
# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо
# только числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами
# выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента. Вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.


class OwnError(Exception):
    num_list = []

    def __init__(self, user_num):
        self.user_num = user_num

check = None
while check != 'stop':
    user_num = input("Введите число: ")
    check = user_num
    try:
        if user_num == 'stop':
            break
        user_num = int(user_num)
    except ValueError:
        print("Необходимо вводить только числа!")
    else:
        OwnError.num_list.append(user_num)

print('Ваш список', OwnError.num_list)
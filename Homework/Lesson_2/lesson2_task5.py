# Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который
# не возрастает. У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге
# существуют элементы с одинаковыми значениями, то новый элемент с тем же значением
# должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].


my_list = [7, 5, 3, 3, 2]
print('Оригинальный список:', my_list)



while len(my_list) < 12: # Условие взято произвольно, просто чтобы запросить число у пользователя несколько раз
    last = my_list[-1]  # Определяем первый и последний элемент списка
    first = my_list[0]
    user_number = int(input('Введите число '))
    if user_number in my_list:
        ind_list = my_list.index(user_number) # Если число есть в списке, то определяем его индекс и сколько раз
        count_list = my_list.count(user_number) # оновходит в список. И вставляем новый элемент после
        my_list.insert(ind_list + count_list, user_number)
    else: # если число не входит в список и оно меньше последнего, то вставляем число в конец
        if user_number < last:
             my_list.append(user_number)
        elif user_number > first: # если число не входит в список и оно больше первого, то вставляем число в начало
             my_list.insert(0, user_number)
        # если числа нет в списке и оно должно находиться не в начале и не в конце, то вставляем его перед тем, которое
        # меньше него
        else:
            for i in range(len(my_list)):
                if user_number > my_list[i]:
                    my_list.insert(i, user_number)
                    break


    print('Измененный список', my_list)